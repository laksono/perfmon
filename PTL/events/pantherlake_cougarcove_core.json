{
  "Header": {
    "Copyright": "Copyright (c) 2001 - 2025 Intel Corporation. All rights reserved.",
    "Info": "Performance Monitoring Events for Intel(R) Core(TM) Processor - V1.00",
    "DatePublished": "03/27/2025",
    "Version": "1.00",
    "Legend": ""
  },
  "Events": [
    {
      "EventCode": "0x00",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "INST_RETIRED.ANY",
      "BriefDescription": "Number of instructions retired. Fixed Counter - architectural event",
      "PublicDescription": "Counts the number of X86 instructions retired - an Architectural PerfMon event. Counting continues during hardware interrupts, traps, and inside interrupt handlers. Notes: INST_RETIRED.ANY is counted by a designated fixed counter freeing up programmable counters to count other events. INST_RETIRED.ANY_P is counted by a programmable counter.",
      "Counter": "Fixed counter 0",
      "PEBScounters": "32",
      "SampleAfterValue": "2000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "32",
      "Speculative": "0"
    },
    {
      "EventCode": "0x00",
      "UMask": "0x02",
      "UMaskExt": "0x00",
      "EventName": "CPU_CLK_UNHALTED.THREAD",
      "BriefDescription": "Core cycles when the thread is not in a halt state.",
      "PublicDescription": "Counts the number of core cycles while the thread is not in a halt state. The thread enters the halt state when it is running the HLT instruction. This event is a component in many key event ratios. The core frequency may change from time to time due to transitions associated with Enhanced Intel SpeedStep Technology or TM2. For this reason this event may have a changing ratio with regards to time. When the core frequency is constant, this event can approximate elapsed time while the core was not in the halt state. It is counted on a dedicated fixed counter, leaving the programmable counters available for other events.",
      "Counter": "Fixed counter 1",
      "PEBScounters": "33",
      "SampleAfterValue": "2000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x00",
      "UMask": "0x02",
      "UMaskExt": "0x00",
      "EventName": "CPU_CLK_UNHALTED.CORE",
      "BriefDescription": "Core cycles when the core is not in a halt state.",
      "PublicDescription": "Counts the number of core cycles while the core is not in a halt state. The core enters the halt state when it is running the HLT instruction. This event is a component in many key event ratios. The core frequency may change from time to time due to transitions associated with Enhanced Intel SpeedStep Technology or TM2. For this reason this event may have a changing ratio with regards to time. When the core frequency is constant, this event can approximate elapsed time while the core was not in the halt state. It is counted on a dedicated fixed counter, leaving the programmable counters available for other events.",
      "Counter": "Fixed counter 1",
      "PEBScounters": "33",
      "SampleAfterValue": "2000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x00",
      "UMask": "0x03",
      "UMaskExt": "0x00",
      "EventName": "CPU_CLK_UNHALTED.REF_TSC",
      "BriefDescription": "Reference cycles when the core is not in halt state.",
      "PublicDescription": "Counts the number of reference cycles when the core is not in a halt state. The core enters the halt state when it is running the HLT instruction or the MWAIT instruction. This event is not affected by core frequency changes (for example, P states, TM2 transitions) but has the same incrementing frequency as the time stamp counter. This event can approximate elapsed time while the core was not in a halt state. Note: On all current platforms this event stops counting during 'throttling (TM)' states duty off periods the processor is 'halted'.  The counter update is done at a lower clock rate then the core clock the overflow status bit for this counter may appear 'sticky'.  After the counter has overflowed and software clears the overflow status bit and resets the counter to less than MAX. The reset value to the counter is not clocked immediately so the overflow status bit will flip 'high (1)' and generate another PMI (if enabled) after which the reset value gets clocked into the counter. Therefore, software will get the interrupt, read the overflow status bit '1 for bit 34 while the counter value is less than MAX. Software should ignore this case.",
      "Counter": "Fixed counter 2",
      "PEBScounters": "34",
      "SampleAfterValue": "2000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x00",
      "UMask": "0x04",
      "UMaskExt": "0x00",
      "EventName": "TOPDOWN.SLOTS",
      "BriefDescription": "TMA slots available for an unhalted logical processor. Fixed counter - architectural event",
      "PublicDescription": "Number of available slots for an unhalted logical processor. The event increments by machine-width of the narrowest pipeline as employed by the Top-down Microarchitecture Analysis method (TMA). Software can use this event as the denominator for the top-level metrics of the TMA method. This architectural event is counted on a designated fixed counter (Fixed Counter 3).",
      "Counter": "Fixed counter 3",
      "PEBScounters": "35",
      "SampleAfterValue": "10000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x03",
      "UMask": "0x82",
      "UMaskExt": "0x00",
      "EventName": "LD_BLOCKS.STORE_FORWARD",
      "BriefDescription": "Loads blocked due to overlapping with a preceding store that cannot be forwarded.",
      "PublicDescription": "Counts the number of times where store forwarding was prevented for a load operation. The most common case is a load blocked due to the address of memory access (partially) overlapping with a preceding uncompleted store. Note: See the table of not supported store forwards in the Optimization Guide.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x11",
      "UMask": "0x0e",
      "UMaskExt": "0x00",
      "EventName": "ITLB_MISSES.WALK_COMPLETED",
      "BriefDescription": "Code miss in all TLB levels causes a page walk that completes. (All page sizes)",
      "PublicDescription": "Counts completed page walks (all page sizes) caused by a code fetch. This implies it missed in the ITLB (Instruction TLB) and further levels of TLB. The page walk can end with or without a fault.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x12",
      "UMask": "0x0e",
      "UMaskExt": "0x00",
      "EventName": "DTLB_LOAD_MISSES.WALK_COMPLETED",
      "BriefDescription": "Load miss in all TLB levels causes a page walk that completes. (All page sizes)",
      "PublicDescription": "Counts completed page walks  (all page sizes) caused by demand data loads. This implies it missed in the DTLB and further levels of TLB. The page walk can end with or without a fault.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x13",
      "UMask": "0x0e",
      "UMaskExt": "0x00",
      "EventName": "DTLB_STORE_MISSES.WALK_COMPLETED",
      "BriefDescription": "Store misses in all TLB levels causes a page walk that completes. (All page sizes)",
      "PublicDescription": "Counts completed page walks  (all page sizes) caused by demand data stores. This implies it missed in the DTLB and further levels of TLB. The page walk can end with or without a fault.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x24",
      "UMask": "0xe1",
      "UMaskExt": "0x00",
      "EventName": "L2_RQSTS.ALL_DEMAND_DATA_RD",
      "BriefDescription": "Demand Data Read access L2 cache",
      "PublicDescription": "Counts Demand Data Read requests accessing the L2 cache. These requests may hit or miss L2 cache. True-miss exclude misses that were merged with ongoing L2 misses. An access is counted once.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "200003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x24",
      "UMask": "0xe4",
      "UMaskExt": "0x00",
      "EventName": "L2_RQSTS.ALL_CODE_RD",
      "BriefDescription": "L2 code requests",
      "PublicDescription": "Counts the total number of L2 code requests.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "200003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x2A,0x2B",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "OCR.DEMAND_DATA_RD.L3_MISS",
      "BriefDescription": "Counts demand data reads that were not supplied by the L3 cache.",
      "PublicDescription": "Counts demand data reads that were not supplied by the L3 cache.",
      "Counter": "0,1,2,3",
      "PEBScounters": "0",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x1a6,0x1a7",
      "MSRValue": "0x9E7FA000001",
      "Precise": "0",
      "CollectPEBSRecord": "0",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "1",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0x2A,0x2B",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "OCR.DEMAND_DATA_RD.ANY_RESPONSE",
      "BriefDescription": "Counts demand data reads that have any type of response.",
      "PublicDescription": "Counts demand data reads that have any type of response.",
      "Counter": "0,1,2,3",
      "PEBScounters": "0",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x1a6,0x1a7",
      "MSRValue": "0x10001",
      "Precise": "0",
      "CollectPEBSRecord": "0",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "1",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0x2A,0x2B",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "OCR.DEMAND_DATA_RD.DRAM",
      "BriefDescription": "Counts demand data reads that were supplied by DRAM.",
      "PublicDescription": "Counts demand data reads that were supplied by DRAM.",
      "Counter": "0,1,2,3",
      "PEBScounters": "0",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x1a6,0x1a7",
      "MSRValue": "0x1E780000001",
      "Precise": "0",
      "CollectPEBSRecord": "0",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "1",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0x2A,0x2B",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "OCR.DEMAND_RFO.L3_MISS",
      "BriefDescription": "Counts demand read for ownership (RFO) requests and software prefetches for exclusive ownership (PREFETCHW) that were not supplied by the L3 cache.",
      "PublicDescription": "Counts demand read for ownership (RFO) requests and software prefetches for exclusive ownership (PREFETCHW) that were not supplied by the L3 cache.",
      "Counter": "0,1,2,3",
      "PEBScounters": "0",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x1a6,0x1a7",
      "MSRValue": "0x9E7FA000002",
      "Precise": "0",
      "CollectPEBSRecord": "0",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "1",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0x2A,0x2B",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "OCR.DEMAND_RFO.ANY_RESPONSE",
      "BriefDescription": "Counts demand read for ownership (RFO) requests and software prefetches for exclusive ownership (PREFETCHW) that have any type of response.",
      "PublicDescription": "Counts demand read for ownership (RFO) requests and software prefetches for exclusive ownership (PREFETCHW) that have any type of response.",
      "Counter": "0,1,2,3",
      "PEBScounters": "0",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x1a6,0x1a7",
      "MSRValue": "0x10002",
      "Precise": "0",
      "CollectPEBSRecord": "0",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "1",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0x2e",
      "UMask": "0x41",
      "UMaskExt": "0x00",
      "EventName": "LONGEST_LAT_CACHE.MISS",
      "BriefDescription": "Core-originated cacheable requests that missed L3  (Except hardware prefetches to the L3)",
      "PublicDescription": "Counts core-originated cacheable requests that miss the L3 cache (Longest Latency cache). Requests include data and code reads, Reads-for-Ownership (RFOs), speculative accesses and hardware prefetches to the L1 and L2.  It does not include hardware prefetches to the L3, and may not count other types of requests to the L3.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x2e",
      "UMask": "0x4f",
      "UMaskExt": "0x00",
      "EventName": "LONGEST_LAT_CACHE.REFERENCE",
      "BriefDescription": "Core-originated cacheable requests that refer to L3 (Except hardware prefetches to the L3)",
      "PublicDescription": "Counts core-originated cacheable requests to the L3 cache (Longest Latency cache). Requests include data and code reads, Reads-for-Ownership (RFOs), speculative accesses and hardware prefetches to the L1 and L2.  It does not include hardware prefetches to the L3, and may not count other types of requests to the L3.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x3c",
      "UMask": "0x00",
      "UMaskExt": "0x00",
      "EventName": "CPU_CLK_UNHALTED.THREAD_P",
      "BriefDescription": "Thread cycles when thread is not in halt state [This event is alias to CPU_CLK_UNHALTED.CORE_P]",
      "PublicDescription": "This is an architectural event that counts the number of thread cycles while the thread is not in a halt state. The thread enters the halt state when it is running the HLT instruction. The core frequency may change from time to time due to power or thermal throttling. For this reason, this event may have a changing ratio with regards to wall clock time. [This event is alias to CPU_CLK_UNHALTED.CORE_P]",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "2000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x3c",
      "UMask": "0x00",
      "UMaskExt": "0x00",
      "EventName": "CPU_CLK_UNHALTED.CORE_P",
      "BriefDescription": "Thread cycles when thread is not in halt state [This event is alias to CPU_CLK_UNHALTED.THREAD_P]",
      "PublicDescription": "This is an architectural event that counts the number of thread cycles while the thread is not in a halt state. The thread enters the halt state when it is running the HLT instruction. The core frequency may change from time to time due to power or thermal throttling. For this reason, this event may have a changing ratio with regards to wall clock time. [This event is alias to CPU_CLK_UNHALTED.THREAD_P]",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "2000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x3c",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "CPU_CLK_UNHALTED.REF_TSC_P",
      "BriefDescription": "Reference cycles when the core is not in halt state.",
      "PublicDescription": "Counts the number of reference cycles when the core is not in a halt state. The core enters the halt state when it is running the HLT instruction or the MWAIT instruction. This event is not affected by core frequency changes (for example, P states, TM2 transitions) but has the same incrementing frequency as the time stamp counter. This event can approximate elapsed time while the core was not in a halt state. Note: On all current platforms this event stops counting during 'throttling (TM)' states duty off periods the processor is 'halted'.  The counter update is done at a lower clock rate then the core clock the overflow status bit for this counter may appear 'sticky'.  After the counter has overflowed and software clears the overflow status bit and resets the counter to less than MAX. The reset value to the counter is not clocked immediately so the overflow status bit will flip 'high (1)' and generate another PMI (if enabled) after which the reset value gets clocked into the counter. Therefore, software will get the interrupt, read the overflow status bit '1 for bit 34 while the counter value is less than MAX. Software should ignore this case.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "2000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0x9c",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "IDQ_BUBBLES.CORE",
      "BriefDescription": "This event counts a subset of the Topdown Slots event that when no operation was delivered to the back-end pipeline due to instruction fetch limitations when the back-end could have accepted more operations. Common examples include instruction cache misses or x86 instruction decode limitations.",
      "PublicDescription": "This event counts a subset of the Topdown Slots event that when no operation was delivered to the back-end pipeline due to instruction fetch limitations when the back-end could have accepted more operations. Common examples include instruction cache misses or x86 instruction decode limitations. Software can use this event as the numerator for the Frontend Bound metric (or top-level category) of the Top-down Microarchitecture Analysis method.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "1000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0xa4",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "TOPDOWN.SLOTS_P",
      "BriefDescription": "TMA slots available for an unhalted logical processor. General counter - architectural event",
      "PublicDescription": "Counts the number of available slots for an unhalted logical processor. The event increments by machine-width of the narrowest pipeline as employed by the Top-down Microarchitecture Analysis method.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "10000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0xa4",
      "UMask": "0x02",
      "UMaskExt": "0x00",
      "EventName": "TOPDOWN.BACKEND_BOUND_SLOTS",
      "BriefDescription": "This event counts a subset of the Topdown Slots event that were not consumed by the back-end pipeline due to lack of back-end resources, as a result of memory subsystem delays, execution units limitations, or other conditions.",
      "PublicDescription": "This event counts a subset of the Topdown Slots event that were not consumed by the back-end pipeline due to lack of back-end resources, as a result of memory subsystem delays, execution units limitations, or other conditions. Software can use this event as the numerator for the Backend Bound metric (or top-level category) of the Top-down Microarchitecture Analysis method.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "10000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "1"
    },
    {
      "EventCode": "0xc0",
      "UMask": "0x00",
      "UMaskExt": "0x00",
      "EventName": "INST_RETIRED.ANY_P",
      "BriefDescription": "Number of instructions retired. General Counter - architectural event",
      "PublicDescription": "Counts the number of X86 instructions retired - an Architectural PerfMon event. Counting continues during hardware interrupts, traps, and inside interrupt handlers. Notes: INST_RETIRED.ANY is counted by a designated fixed counter freeing up programmable counters to count other events. INST_RETIRED.ANY_P is counted by a programmable counter.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "2000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xc2",
      "UMask": "0x02",
      "UMaskExt": "0x00",
      "EventName": "UOPS_RETIRED.SLOTS",
      "BriefDescription": "This event counts a subset of the Topdown Slots event that are utilized by operations that eventually get retired (committed) by the processor pipeline. Usually, this event positively correlates with higher performance  for example, as measured by the instructions-per-cycle metric.",
      "PublicDescription": "This event counts a subset of the Topdown Slots event that are utilized by operations that eventually get retired (committed) by the processor pipeline. Usually, this event positively correlates with higher performance  for example, as measured by the instructions-per-cycle metric. Software can use this event as the numerator for the Retiring metric (or top-level category) of the Top-down Microarchitecture Analysis method.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "2000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "0",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "NA",
      "Speculative": "0"
    },
    {
      "EventCode": "0xc4",
      "UMask": "0x00",
      "UMaskExt": "0x00",
      "EventName": "BR_INST_RETIRED.ALL_BRANCHES",
      "BriefDescription": "All branch instructions retired.",
      "PublicDescription": "Counts all branch instructions retired.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "400009",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xc5",
      "UMask": "0x00",
      "UMaskExt": "0x00",
      "EventName": "BR_MISP_RETIRED.ALL_BRANCHES",
      "BriefDescription": "All mispredicted branch instructions retired.",
      "PublicDescription": "Counts all the retired branch instructions that were mispredicted by the processor. A branch misprediction occurs when the processor incorrectly predicts the destination of the branch.  When the misprediction is discovered at execution, all the instructions executed in the wrong (speculative) path must be discarded, and the processor must start fetching from the correct path.",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "400009",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.LOAD_LATENCY_GT_128",
      "BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 128 cycles.",
      "PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 128 cycles.  Reported latency may be longer than just the memory latency.",
      "Counter": "2,3,4,5,6,7,8,9",
      "PEBScounters": "2,3,4,5,6,7,8,9",
      "SampleAfterValue": "1009",
      "MSRIndex": "0x3F6",
      "MSRValue": "0x80",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "1",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.LOAD_LATENCY_GT_16",
      "BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 16 cycles.",
      "PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 16 cycles.  Reported latency may be longer than just the memory latency.",
      "Counter": "2,3,4,5,6,7,8,9",
      "PEBScounters": "2,3,4,5,6,7,8,9",
      "SampleAfterValue": "20011",
      "MSRIndex": "0x3F6",
      "MSRValue": "0x10",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "1",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.LOAD_LATENCY_GT_256",
      "BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 256 cycles.",
      "PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 256 cycles.  Reported latency may be longer than just the memory latency.",
      "Counter": "2,3,4,5,6,7,8,9",
      "PEBScounters": "2,3,4,5,6,7,8,9",
      "SampleAfterValue": "503",
      "MSRIndex": "0x3F6",
      "MSRValue": "0x100",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "1",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.LOAD_LATENCY_GT_32",
      "BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 32 cycles.",
      "PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 32 cycles.  Reported latency may be longer than just the memory latency.",
      "Counter": "2,3,4,5,6,7,8,9",
      "PEBScounters": "2,3,4,5,6,7,8,9",
      "SampleAfterValue": "100007",
      "MSRIndex": "0x3F6",
      "MSRValue": "0x20",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "1",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.LOAD_LATENCY_GT_4",
      "BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 4 cycles.",
      "PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 4 cycles.  Reported latency may be longer than just the memory latency.",
      "Counter": "2,3,4,5,6,7,8,9",
      "PEBScounters": "2,3,4,5,6,7,8,9",
      "SampleAfterValue": "100003",
      "MSRIndex": "0x3F6",
      "MSRValue": "0x4",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "1",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.LOAD_LATENCY_GT_512",
      "BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 512 cycles.",
      "PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 512 cycles.  Reported latency may be longer than just the memory latency.",
      "Counter": "2,3,4,5,6,7,8,9",
      "PEBScounters": "2,3,4,5,6,7,8,9",
      "SampleAfterValue": "101",
      "MSRIndex": "0x3F6",
      "MSRValue": "0x200",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "1",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.LOAD_LATENCY_GT_64",
      "BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 64 cycles.",
      "PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 64 cycles.  Reported latency may be longer than just the memory latency.",
      "Counter": "2,3,4,5,6,7,8,9",
      "PEBScounters": "2,3,4,5,6,7,8,9",
      "SampleAfterValue": "2003",
      "MSRIndex": "0x3F6",
      "MSRValue": "0x40",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "1",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.LOAD_LATENCY_GT_8",
      "BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 8 cycles.",
      "PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 8 cycles.  Reported latency may be longer than just the memory latency.",
      "Counter": "2,3,4,5,6,7,8,9",
      "PEBScounters": "2,3,4,5,6,7,8,9",
      "SampleAfterValue": "50021",
      "MSRIndex": "0x3F6",
      "MSRValue": "0x8",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "1",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.LOAD_LATENCY_GT_1024",
      "BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 1024 cycles.",
      "PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 1024 cycles.  Reported latency may be longer than just the memory latency.",
      "Counter": "2,3,4,5,6,7,8,9",
      "PEBScounters": "2,3,4,5,6,7,8,9",
      "SampleAfterValue": "53",
      "MSRIndex": "0x3F6",
      "MSRValue": "0x400",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "1",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.LOAD_LATENCY_GT_2048",
      "BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 2048 cycles.",
      "PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 2048 cycles.  Reported latency may be longer than just the memory latency.",
      "Counter": "2,3,4,5,6,7,8,9",
      "PEBScounters": "2,3,4,5,6,7,8,9",
      "SampleAfterValue": "23",
      "MSRIndex": "0x3F6",
      "MSRValue": "0x800",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "1",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xcd",
      "UMask": "0x02",
      "UMaskExt": "0x00",
      "EventName": "MEM_TRANS_RETIRED.STORE_SAMPLE",
      "BriefDescription": "Retired memory store access operations. A PDist event for PEBS Store Latency Facility.",
      "PublicDescription": "Counts Retired memory accesses with at least 1 store operation. This PEBS event is the precisely-distributed (PDist) trigger covering all stores uops for sampling by the PEBS Store Latency Facility. The facility is described in Intel SDM Volume 3 section 19.9.8",
      "Counter": "0,1",
      "PEBScounters": "0,1",
      "SampleAfterValue": "1000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xd0",
      "UMask": "0x81",
      "UMaskExt": "0x00",
      "EventName": "MEM_INST_RETIRED.ALL_LOADS",
      "BriefDescription": "Counts all retired load instructions.",
      "PublicDescription": "Counts Instructions with at least one architecturally visible load retired.",
      "Counter": "0,1,2,3",
      "PEBScounters": "0,1,2,3",
      "SampleAfterValue": "1000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xd0",
      "UMask": "0x82",
      "UMaskExt": "0x00",
      "EventName": "MEM_INST_RETIRED.ALL_STORES",
      "BriefDescription": "Retired store instructions.",
      "PublicDescription": "Counts all retired store instructions.",
      "Counter": "0,1,2,3",
      "PEBScounters": "0,1,2,3",
      "SampleAfterValue": "1000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "1",
      "L1_Hit_Indication": "1",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    },
    {
      "EventCode": "0xe4",
      "UMask": "0x01",
      "UMaskExt": "0x00",
      "EventName": "MISC_RETIRED.LBR_INSERTS",
      "BriefDescription": "LBR record is inserted",
      "PublicDescription": "LBR record is inserted",
      "Counter": "0,1,2,3,4,5,6,7,8,9",
      "PEBScounters": "0,1,2,3,4,5,6,7,8,9",
      "SampleAfterValue": "1000003",
      "MSRIndex": "0x00",
      "MSRValue": "0x00",
      "Precise": "1",
      "CollectPEBSRecord": "2",
      "TakenAlone": "0",
      "CounterMask": "0",
      "Invert": "0",
      "EdgeDetect": "0",
      "Data_LA": "0",
      "L1_Hit_Indication": "0",
      "Errata": "null",
      "Offcore": "0",
      "Deprecated": "0",
      "Equal": "0",
      "PDISTCounter": "0",
      "Speculative": "0"
    }
  ]
}